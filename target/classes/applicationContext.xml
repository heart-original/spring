<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">


   <!-- &lt;!&ndash;注册bean对象&ndash;&gt;
    &lt;!&ndash;<bean id="someService" class="spring.service.SomeServiceImpl"/>&ndash;&gt;

    <bean id="MyDate" class="java.util.Date"/>

    &lt;!&ndash;set注入&ndash;&gt;
    &lt;!&ndash;<bean id="MyStudent" class="spring.domain.Student">
        <property name="name" value="张三"/>
        <property name="age" value="18"/>
    </bean>&ndash;&gt;

    &lt;!&ndash;<bean id="MyStudent" class="spring.domain.Student">
        <property name="name" value="张三"/>
        <property name="age" value="18"/>
        <property name="school" ref="MySchool"/>
    </bean>&ndash;&gt;

    <bean id="MySchool" class="spring.domain.School">
        <property name="name" value="闽南师范大学"/>
        <property name="address" value="漳州芗城区"/>
    </bean>

    &lt;!&ndash;构造注入&ndash;&gt;
    <bean id="MyStudent" class="spring.domain.Student">
        <constructor-arg name="name" value="张三"/>
        <constructor-arg name="age" value="18"/>
        <constructor-arg name="school" ref="MySchool"/>
    </bean>
-->

    <!--&lt;!&ndash;使用注解方式&ndash;&gt;
    <context:component-scan base-package="spring"/>

    <bean id="someService" class="spring.service.SomeServiceImpl"/>

    <bean id="myAspect" class="spring.aspect.MyAspect"/>

    <aop:aspectj-autoproxy/>-->

    <context:property-placeholder location="classpath:jdbc.properties" />

    <!--配置druid连接池-->
    <bean id="myDataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <!--set注入给DruidDataSource提供连接数据库信息 -->
        <!--    使用属性配置文件中的数据，语法 ${key} -->
        <property name="url" value="${jdbc.url}" /><!--setUrl()-->
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}" />
        <property name="maxActive" value="${jdbc.max}" />
    </bean>

    <!--注册sqlsessionFactory的bean-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="myDataSource"/>
        <property name="configLocation" value="classpath:mybatis.xml"/>
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--指定SqlSessionFactory对象的id-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
        <!--指定包名， 包名是dao接口所在的包名。
            MapperScannerConfigurer会扫描这个包中的所有接口，把每个接口都执行
            一次getMapper()方法，得到每个接口的dao对象。
            创建好的dao对象放入到spring的容器中的。 dao对象的默认名称是 接口名首字母小写
        -->
        <property name="basePackage" value="spring.dao"/>
    </bean>

    <!--<bean id="studentService" class="spring.service.StudentServiceImpl">
        <property name="studentDao" ref="studentDao"/>
    </bean>-->
    <bean id="bugService" class="spring.service.BuyGoodsServiceImpl">
        <property name="saleDao" ref="saleDao"/>
        <property name="goodsDao" ref="goodsDao"/>
    </bean>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="myDataSource"/>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager"/>
</beans>